<!DOCTYPE html>
<html lang="en-GB"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Part 5 – Timing Checks – Embedded Systems</title>
<meta name="robots" content="max-image-preview:large">
<link rel="dns-prefetch" href="https://s.w.org/">
<link rel="alternate" type="application/rss+xml" title="Embedded Systems » Feed" href="https://blogs.plymouth.ac.uk/embedded-systems/feed/">
<link rel="alternate" type="application/rss+xml" title="Embedded Systems » Comments Feed" href="https://blogs.plymouth.ac.uk/embedded-systems/comments/feed/">
<script>
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/blogs.plymouth.ac.uk\/embedded-systems\/wp-includes\/js\/wp-emoji-release.min.js?ver=5fa31563dcb904c15e3c37b5836f7c3d"}};
/*! This file is auto-generated */
!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([10084,65039,8205,55357,56613],[10084,65039,8203,55357,56613])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
</script><script src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/wp-emoji-release.min.js" type="text/javascript" defer="defer"></script>
<style>
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 0.07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel="stylesheet" id="wp-quicklatex-format-css" href="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/quicklatex-format.css" media="all">
<link rel="stylesheet" id="wp-block-library-css" href="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/style.min.css" media="all">
<style id="wp-block-library-theme-inline-css">
.wp-block-audio figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-audio figcaption{color:hsla(0,0%,100%,.65)}.wp-block-code>code{font-family:Menlo,Consolas,monaco,monospace;color:#1e1e1e;padding:.8em 1em;border:1px solid #ddd;border-radius:4px}.wp-block-embed figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-embed figcaption{color:hsla(0,0%,100%,.65)}.blocks-gallery-caption{color:#555;font-size:13px;text-align:center}.is-dark-theme .blocks-gallery-caption{color:hsla(0,0%,100%,.65)}.wp-block-image figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-image figcaption{color:hsla(0,0%,100%,.65)}.wp-block-pullquote{border-top:4px solid;border-bottom:4px solid;margin-bottom:1.75em;color:currentColor}.wp-block-pullquote__citation,.wp-block-pullquote cite,.wp-block-pullquote footer{color:currentColor;text-transform:uppercase;font-size:.8125em;font-style:normal}.wp-block-quote{border-left:.25em solid;margin:0 0 1.75em;padding-left:1em}.wp-block-quote cite,.wp-block-quote footer{color:currentColor;font-size:.8125em;position:relative;font-style:normal}.wp-block-quote.has-text-align-right{border-left:none;border-right:.25em solid;padding-left:0;padding-right:1em}.wp-block-quote.has-text-align-center{border:none;padding-left:0}.wp-block-quote.is-large,.wp-block-quote.is-style-large,.wp-block-quote.is-style-plain{border:none}.wp-block-search .wp-block-search__label{font-weight:700}.wp-block-group:where(.has-background){padding:1.25em 2.375em}.wp-block-separator{border:none;border-bottom:2px solid;margin-left:auto;margin-right:auto;opacity:.4}.wp-block-separator:not(.is-style-wide):not(.is-style-dots){width:100px}.wp-block-separator.has-background:not(.is-style-dots){border-bottom:none;height:1px}.wp-block-separator.has-background:not(.is-style-wide):not(.is-style-dots){height:2px}.wp-block-table thead{border-bottom:3px solid}.wp-block-table tfoot{border-top:3px solid}.wp-block-table td,.wp-block-table th{padding:.5em;border:1px solid;word-break:normal}.wp-block-table figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-table figcaption{color:hsla(0,0%,100%,.65)}.wp-block-video figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-video figcaption{color:hsla(0,0%,100%,.65)}.wp-block-template-part.has-background{padding:1.25em 2.375em;margin-top:0;margin-bottom:0}
</style>
<style id="global-styles-inline-css">
body{--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #FFFFFF;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--color--dark-gray: #28303D;--wp--preset--color--gray: #39414D;--wp--preset--color--green: #D1E4DD;--wp--preset--color--blue: #D1DFE4;--wp--preset--color--purple: #D1D1E4;--wp--preset--color--red: #E4D1D1;--wp--preset--color--orange: #E4DAD1;--wp--preset--color--yellow: #EEEADD;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--gradient--purple-to-yellow: linear-gradient(160deg, #D1D1E4 0%, #EEEADD 100%);--wp--preset--gradient--yellow-to-purple: linear-gradient(160deg, #EEEADD 0%, #D1D1E4 100%);--wp--preset--gradient--green-to-yellow: linear-gradient(160deg, #D1E4DD 0%, #EEEADD 100%);--wp--preset--gradient--yellow-to-green: linear-gradient(160deg, #EEEADD 0%, #D1E4DD 100%);--wp--preset--gradient--red-to-yellow: linear-gradient(160deg, #E4D1D1 0%, #EEEADD 100%);--wp--preset--gradient--yellow-to-red: linear-gradient(160deg, #EEEADD 0%, #E4D1D1 100%);--wp--preset--gradient--purple-to-red: linear-gradient(160deg, #D1D1E4 0%, #E4D1D1 100%);--wp--preset--gradient--red-to-purple: linear-gradient(160deg, #E4D1D1 0%, #D1D1E4 100%);--wp--preset--duotone--dark-grayscale: url('#wp-duotone-dark-grayscale');--wp--preset--duotone--grayscale: url('#wp-duotone-grayscale');--wp--preset--duotone--purple-yellow: url('#wp-duotone-purple-yellow');--wp--preset--duotone--blue-red: url('#wp-duotone-blue-red');--wp--preset--duotone--midnight: url('#wp-duotone-midnight');--wp--preset--duotone--magenta-yellow: url('#wp-duotone-magenta-yellow');--wp--preset--duotone--purple-green: url('#wp-duotone-purple-green');--wp--preset--duotone--blue-orange: url('#wp-duotone-blue-orange');--wp--preset--font-size--small: 18px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 24px;--wp--preset--font-size--x-large: 42px;--wp--preset--font-size--extra-small: 16px;--wp--preset--font-size--normal: 20px;--wp--preset--font-size--extra-large: 40px;--wp--preset--font-size--huge: 96px;--wp--preset--font-size--gigantic: 144px;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
</style>
<link rel="stylesheet" id="twenty-twenty-one-style-css" href="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/style.css" media="all">
<style id="twenty-twenty-one-style-inline-css">
:root{--global--color-background: #eeeeee;--global--color-primary: #000;--global--color-secondary: #000;--button--color-background: #000;--button--color-text-hover: #000;}
</style>
<link rel="stylesheet" id="twenty-twenty-one-print-style-css" href="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/print.css" media="print">
<script src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/jquery.min.js" id="jquery-core-js"></script>
<script src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/jquery-migrate.min.js" id="jquery-migrate-js"></script>
<script src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/wp-quicklatex-frontend.js" id="wp-quicklatex-frontend-js"></script>
<link rel="https://api.w.org/" href="https://blogs.plymouth.ac.uk/embedded-systems/wp-json/"><link rel="alternate" type="application/json" href="https://blogs.plymouth.ac.uk/embedded-systems/wp-json/wp/v2/pages/104"><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://blogs.plymouth.ac.uk/embedded-systems/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://blogs.plymouth.ac.uk/embedded-systems/wp-includes/wlwmanifest.xml"> 

<link rel="canonical" href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/test-benches/part-5-timing-checks/">
<link rel="shortlink" href="https://blogs.plymouth.ac.uk/embedded-systems/?p=104">
<link rel="alternate" type="application/json+oembed" href="https://blogs.plymouth.ac.uk/embedded-systems/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fblogs.plymouth.ac.uk%2Fembedded-systems%2Ffpga-and-vhdl%2Ftest-benches%2Fpart-5-timing-checks%2F">
<link rel="alternate" type="text/xml+oembed" href="https://blogs.plymouth.ac.uk/embedded-systems/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fblogs.plymouth.ac.uk%2Fembedded-systems%2Ffpga-and-vhdl%2Ftest-benches%2Fpart-5-timing-checks%2F&amp;format=xml">
<style id="custom-background-css">
body.custom-background { background-color: #eeeeee; }
</style>
	<style>:is([id*='google_ads_iframe'],[id*='taboola-'],.taboolaHeight,.taboola-placeholder,#top-ad,#credential_picker_container,#credentials-picker-container,#credential_picker_iframe,[id*='google-one-tap-iframe'],#google-one-tap-popup-container,.google-one-tap__module,.google-one-tap-modal-div,#amp_floatingAdDiv,#ez-content-blocker-container) {display:none!important;min-height:0!important;height:0!important;}</style></head>

<body data-rsssl="1" class="page-template-default page page-id-104 page-child parent-pageid-30 custom-background wp-custom-logo wp-embed-responsive is-light-theme has-background-white singular has-main-navigation no-widgets">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;"><defs><filter id="wp-duotone-dark-grayscale"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 "></feColorMatrix><feComponentTransfer color-interpolation-filters="sRGB"><feFuncR type="table" tableValues="0 0.49803921568627"></feFuncR><feFuncG type="table" tableValues="0 0.49803921568627"></feFuncG><feFuncB type="table" tableValues="0 0.49803921568627"></feFuncB><feFuncA type="table" tableValues="1 1"></feFuncA></feComponentTransfer><feComposite in2="SourceGraphic" operator="in"></feComposite></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;"><defs><filter id="wp-duotone-grayscale"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 "></feColorMatrix><feComponentTransfer color-interpolation-filters="sRGB"><feFuncR type="table" tableValues="0 1"></feFuncR><feFuncG type="table" tableValues="0 1"></feFuncG><feFuncB type="table" tableValues="0 1"></feFuncB><feFuncA type="table" tableValues="1 1"></feFuncA></feComponentTransfer><feComposite in2="SourceGraphic" operator="in"></feComposite></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;"><defs><filter id="wp-duotone-purple-yellow"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 "></feColorMatrix><feComponentTransfer color-interpolation-filters="sRGB"><feFuncR type="table" tableValues="0.54901960784314 0.98823529411765"></feFuncR><feFuncG type="table" tableValues="0 1"></feFuncG><feFuncB type="table" tableValues="0.71764705882353 0.25490196078431"></feFuncB><feFuncA type="table" tableValues="1 1"></feFuncA></feComponentTransfer><feComposite in2="SourceGraphic" operator="in"></feComposite></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;"><defs><filter id="wp-duotone-blue-red"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 "></feColorMatrix><feComponentTransfer color-interpolation-filters="sRGB"><feFuncR type="table" tableValues="0 1"></feFuncR><feFuncG type="table" tableValues="0 0.27843137254902"></feFuncG><feFuncB type="table" tableValues="0.5921568627451 0.27843137254902"></feFuncB><feFuncA type="table" tableValues="1 1"></feFuncA></feComponentTransfer><feComposite in2="SourceGraphic" operator="in"></feComposite></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;"><defs><filter id="wp-duotone-midnight"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 "></feColorMatrix><feComponentTransfer color-interpolation-filters="sRGB"><feFuncR type="table" tableValues="0 0"></feFuncR><feFuncG type="table" tableValues="0 0.64705882352941"></feFuncG><feFuncB type="table" tableValues="0 1"></feFuncB><feFuncA type="table" tableValues="1 1"></feFuncA></feComponentTransfer><feComposite in2="SourceGraphic" operator="in"></feComposite></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;"><defs><filter id="wp-duotone-magenta-yellow"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 "></feColorMatrix><feComponentTransfer color-interpolation-filters="sRGB"><feFuncR type="table" tableValues="0.78039215686275 1"></feFuncR><feFuncG type="table" tableValues="0 0.94901960784314"></feFuncG><feFuncB type="table" tableValues="0.35294117647059 0.47058823529412"></feFuncB><feFuncA type="table" tableValues="1 1"></feFuncA></feComponentTransfer><feComposite in2="SourceGraphic" operator="in"></feComposite></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;"><defs><filter id="wp-duotone-purple-green"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 "></feColorMatrix><feComponentTransfer color-interpolation-filters="sRGB"><feFuncR type="table" tableValues="0.65098039215686 0.40392156862745"></feFuncR><feFuncG type="table" tableValues="0 1"></feFuncG><feFuncB type="table" tableValues="0.44705882352941 0.4"></feFuncB><feFuncA type="table" tableValues="1 1"></feFuncA></feComponentTransfer><feComposite in2="SourceGraphic" operator="in"></feComposite></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;"><defs><filter id="wp-duotone-blue-orange"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 "></feColorMatrix><feComponentTransfer color-interpolation-filters="sRGB"><feFuncR type="table" tableValues="0.098039215686275 1"></feFuncR><feFuncG type="table" tableValues="0 0.66274509803922"></feFuncG><feFuncB type="table" tableValues="0.84705882352941 0.41960784313725"></feFuncB><feFuncA type="table" tableValues="1 1"></feFuncA></feComponentTransfer><feComposite in2="SourceGraphic" operator="in"></feComposite></filter></defs></svg><div id="page" class="site">
	<a class="skip-link screen-reader-text" href="#content">Skip to content</a>

	
<header id="masthead" class="site-header has-logo has-title-and-tagline has-menu">

	
	<div class="site-logo"><a href="https://blogs.plymouth.ac.uk/embedded-systems/" class="custom-logo-link" rel="home"><img width="300" height="64" src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/wordpress-logo.png" class="custom-logo" alt="Embedded Systems"></a></div>

<div class="site-branding">

	
						<p class="site-title"><a href="https://blogs.plymouth.ac.uk/embedded-systems/">Embedded Systems</a></p>
			
			<p class="site-description">
			Just another Plymouth University Blogs site		</p>
	</div><!-- .site-branding -->
	
	<nav id="site-navigation" class="primary-navigation" aria-label="Primary menu">
		<div class="menu-button-container">
			<button id="primary-mobile-menu" class="button" aria-controls="primary-menu-list" aria-expanded="false">
				<span class="dropdown-icon open">Menu					<svg class="svg-icon" width="24" height="24" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.5 6H19.5V7.5H4.5V6ZM4.5 12H19.5V13.5H4.5V12ZM19.5 18H4.5V19.5H19.5V18Z" fill="currentColor"></path></svg>				</span>
				<span class="dropdown-icon close">Close					<svg class="svg-icon" width="24" height="24" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M12 10.9394L5.53033 4.46973L4.46967 5.53039L10.9393 12.0001L4.46967 18.4697L5.53033 19.5304L12 13.0607L18.4697 19.5304L19.5303 18.4697L13.0607 12.0001L19.5303 5.53039L18.4697 4.46973L12 10.9394Z" fill="currentColor"></path></svg>				</span>
			</button><!-- #primary-mobile-menu -->
		</div><!-- .menu-button-container -->
		<div class="primary-menu-container"><ul id="primary-menu-list" class="menu-wrapper"><li id="menu-item-880" class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor current-menu-ancestor current_page_ancestor menu-item-has-children menu-item-880"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/">FPGAs and VHDL</a><button class="sub-menu-toggle" aria-expanded="false" onclick="twentytwentyoneExpandSubMenu(this)"><span class="icon-plus"><svg class="svg-icon" width="18" height="18" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M18 11.2h-5.2V6h-1.6v5.2H6v1.6h5.2V18h1.6v-5.2H18z" fill="currentColor"></path></svg></span><span class="icon-minus"><svg class="svg-icon" width="18" height="18" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 11h12v2H6z" fill="currentColor"></path></svg></span><span class="screen-reader-text">Open menu</span></button>
<ul class="sub-menu">
	<li id="menu-item-881" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-881"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/getting-started-with-quartus-v16-1/">Getting Started with Quartus (v16.1)</a>
	<ul class="sub-menu">
		<li id="menu-item-882" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-882"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/getting-started-with-quartus-v16-1/creating-a-quartus-project-from-scratch/">Creating a Quartus Project from Scratch</a>
		<ul class="sub-menu">
			<li id="menu-item-883" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-883"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/getting-started-with-quartus-v16-1/using-vector-waveform-files/">Using Vector Waveform Files</a></li>
			<li id="menu-item-884" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-884"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/getting-started-with-quartus-v16-1/using-modelsim-for-interactive-simulation/">Using ModelSim for Interactive Simulation</a></li>
			<li id="menu-item-885" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-885"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/getting-started-with-quartus-v16-1/help-with-programming-and-simulation/">Help with Programming and Simulation</a></li>
		</ul>
</li>
	</ul>
</li>
	<li id="menu-item-886" class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor current-menu-ancestor current-menu-parent current-page-parent current_page_parent current_page_ancestor menu-item-has-children menu-item-886"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/test-benches/">Test Benches</a>
	<ul class="sub-menu">
		<li id="menu-item-887" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-887"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/test-benches/part-1-single-architecture-test/">Part 1 – Testing a Single Architecture Component</a></li>
		<li id="menu-item-888" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-888"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/test-benches/part-2-multiple-architectures/">Part 2 – Multiple Architectures</a></li>
		<li id="menu-item-889" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-889"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/test-benches/part-3-automatic-testing-with-assert/">Part 3 – Automatic Testing with ‘assert’</a></li>
		<li id="menu-item-890" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-890"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/test-benches/part-4-testing-with-simulated-timing/">Part 4 – Testing with Simulated Timing</a></li>
		<li id="menu-item-891" class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-104 current_page_item menu-item-891"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/test-benches/part-5-timing-checks/" aria-current="page">Part 5 – Timing Checks</a></li>
		<li id="menu-item-892" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-892"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/test-benches/part-6-modelling-and-testing-synchronous-systems/">Part 6 – Modelling and Testing Synchronous Systems</a></li>
	</ul>
</li>
	<li id="menu-item-893" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-893"><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/testing-understanding-the-scfifo-megafunction/">Testing / Understanding the FIFO (Intel FPGA IP)</a></li>
</ul>
</li>
<li id="menu-item-895" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-895"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/">Microcontrollers</a><button class="sub-menu-toggle" aria-expanded="false" onclick="twentytwentyoneExpandSubMenu(this)"><span class="icon-plus"><svg class="svg-icon" width="18" height="18" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M18 11.2h-5.2V6h-1.6v5.2H6v1.6h5.2V18h1.6v-5.2H18z" fill="currentColor"></path></svg></span><span class="icon-minus"><svg class="svg-icon" width="18" height="18" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 11h12v2H6z" fill="currentColor"></path></svg></span><span class="screen-reader-text">Open menu</span></button>
<ul class="sub-menu">
	<li id="menu-item-896" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-896"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/">mbed-os</a>
	<ul class="sub-menu">
		<li id="menu-item-897" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-897"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/">Courses</a>
		<ul class="sub-menu">
			<li id="menu-item-898" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-898"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/embedded-systems-in-context-level-4/">Level 4 – Embedded Systems in Context (ToC)</a>
			<ul class="sub-menu">
				<li id="menu-item-899" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-899"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/embedded-systems-in-context-level-4/foreward/">FOREWARD</a></li>
				<li id="menu-item-900" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-900"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/embedded-systems-in-context-level-4/topic-1-digital-output/">Topic 1 – Digital Output</a></li>
				<li id="menu-item-901" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-901"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/embedded-systems-in-context-level-4/topic-2-potential-dividers-problem-based-learning-task/">Topic 2 – Potential Dividers (Problem Based Learning task)</a></li>
				<li id="menu-item-902" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-902"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/embedded-systems-in-context-level-4/topic-3-digital-inputs-and-multiple-outputs/">Topic 3 – Digital Inputs and Multiple Outputs</a></li>
				<li id="menu-item-903" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-903"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/embedded-systems-in-context-level-4/topic-4-analogue-input/">Topic 4 – Analogue Input</a>
				<ul class="sub-menu">
					<li id="menu-item-904" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-904"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/embedded-systems-in-context-level-4/topic-4-analogue-input/task-4-1-2-solution/">Task 4.1.2 Solution</a></li>
				</ul>
</li>
				<li id="menu-item-953" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-953"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/embedded-systems-in-context-level-4/topic-5-analogue-output/">Topic 5 – Analogue Output (introduction)</a></li>
			</ul>
</li>
			<li id="menu-item-905" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-905"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/level-5-embedded-and-real-time-systems/">Level 5 – Embedded and Real Time Systems</a>
			<ul class="sub-menu">
				<li id="menu-item-906" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-906"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/level-5-embedded-and-real-time-systems/forward/">Forward</a></li>
				<li id="menu-item-907" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-907"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/level-5-embedded-and-real-time-systems/review-of-mbed/">Review of Mbed</a></li>
				<li id="menu-item-908" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-908"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/level-5-embedded-and-real-time-systems/managing-multiple-inputs-and-outputs/">Managing Multiple Inputs and Outputs</a></li>
				<li id="menu-item-909" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-909"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/level-5-embedded-and-real-time-systems/performing-real-time-tasks-with-interrupts/">Performing Real-Time Tasks with Interrupts</a></li>
				<li id="menu-item-910" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-910"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/level-5-embedded-and-real-time-systems/analogue-interfacing-real-time-data-conversion/">Analogue Interfacing – Real Time Data Conversion</a></li>
			</ul>
</li>
			<li id="menu-item-911" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-911"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/mbed-os-2/courses/level-6-advanced-embedded-programming/">Level 6 – Advanced Embedded Programming</a></li>
		</ul>
</li>
		<li id="menu-item-912" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-912"><a href="https://blogs.plymouth.ac.uk/embedded-systems/microcontrollers/stm32-and-cmsis/">STM32 and CMSIS</a></li>
	</ul>
</li>
</ul>
</li>
<li id="menu-item-914" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-914"><a href="https://blogs.plymouth.ac.uk/embedded-systems/real-time-programming-and-analogue-io/">Real-Time Programming and Analogue I/O</a></li>
<li id="menu-item-931" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-931"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/">Glossary of Terms</a><button class="sub-menu-toggle" aria-expanded="false" onclick="twentytwentyoneExpandSubMenu(this)"><span class="icon-plus"><svg class="svg-icon" width="18" height="18" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M18 11.2h-5.2V6h-1.6v5.2H6v1.6h5.2V18h1.6v-5.2H18z" fill="currentColor"></path></svg></span><span class="icon-minus"><svg class="svg-icon" width="18" height="18" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 11h12v2H6z" fill="currentColor"></path></svg></span><span class="screen-reader-text">Open menu</span></button>
<ul class="sub-menu">
	<li id="menu-item-916" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-916"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/analogue-to-digital-converter-adc-glossary-entry/">Analogue to Digital Converter (ADC) – (Glossary Entry)</a></li>
	<li id="menu-item-917" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-917"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/constant-voltage-source-glossary-item/">Constant Voltage Source (Glossary Item)</a></li>
	<li id="menu-item-918" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-918"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/digital-signal-glossary-entry/">Digital Signal (Glossary Entry)</a></li>
	<li id="menu-item-919" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-919"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/do-while-loop-glossary-entry/">do-while loop (Glossary Entry)</a></li>
	<li id="menu-item-920" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-920"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/for-loop-glossary-entry/">for-loop (Glossary Entry)</a></li>
	<li id="menu-item-921" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-921"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/h-bridge-glossary-entry/">H-Bridge (Glossary Entry)</a></li>
	<li id="menu-item-922" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-922"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/led-light-emitting-diode-glossary-entry-tbd/">LED – Light Emitting Diode (Glossary Entry)</a></li>
	<li id="menu-item-923" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-923"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/nucleo-board-glossary-entry/">Nucleo Board (Glossary Entry)</a></li>
	<li id="menu-item-924" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-924"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/prototyping-board-glossary-entry/">Prototyping Board (Glossary Entry)</a></li>
	<li id="menu-item-925" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-925"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/push-to-make-switch-glossary-entry/">Push to Make Switch (Glossary Entry)</a></li>
	<li id="menu-item-926" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-926"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/resistor-glossary-entry/">Resistor (Glossary Entry)</a></li>
	<li id="menu-item-927" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-927"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/scanf-glossary-entry/">scanf (Glossary Entry)</a></li>
	<li id="menu-item-928" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-928"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/while-loop-glossary-entry/">While-Loop (Glossary Entry)</a></li>
	<li id="menu-item-929" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-929"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/glossary/">Analogue Signals (Glossary Entry)</a></li>
	<li id="menu-item-932" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-932"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/compiler-glossary-entry/">Compiler (Glossary Entry)</a></li>
	<li id="menu-item-933" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-933"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/logical-or-glossary-entry/">Logical OR (Glossary Entry)</a></li>
	<li id="menu-item-934" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-934"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/logical-and-glossary-entry/">Logical AND (Glossary Entry)</a></li>
	<li id="menu-item-935" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-935"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/logical-not-glossary-entry/">Logical NOT (Glossary Entry)</a></li>
	<li id="menu-item-936" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-936"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/logical-xor-glossary-entry/">Logical XOR (Glossary Entry)</a></li>
	<li id="menu-item-937" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-937"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/logical-shift-glossary-entry/">Logical Shift (Glossary Entry)</a></li>
	<li id="menu-item-938" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-938"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/arithmetic-shift-glossary-entry/">Arithmetic Shift (Glossary Entry)</a></li>
	<li id="menu-item-939" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-939"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/potentiometer-glossary-entry/">Potentiometer (Glossary Entry)</a></li>
	<li id="menu-item-940" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-940"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/hysteresis-and-the-schmitt-trigger-glossary-entry/">Hysteresis and the Schmitt Trigger (Glossary Entry)</a></li>
	<li id="menu-item-941" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-941"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/pulse-width-modulation-pwm-glossary-entry/">Pulse Width Modulation (PWM) – (Glossary Entry)</a></li>
	<li id="menu-item-942" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-942"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/digital-to-analogue-converter-dac-glossary-entry/">Digital to Analogue Converter (DAC) – (Glossary Entry)</a></li>
	<li id="menu-item-943" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-943"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/most-significant-bit-msb-glossary-entry/">Most Significant Bit (msb) – (Glossary Entry)</a></li>
	<li id="menu-item-944" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-944"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/if-else-if-else-statement-glossary-entry/">if-else if-else statement (Glossary Entry)</a></li>
	<li id="menu-item-945" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-945"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/least-significant-bit-lsb-glossary-entry/">Least Significant Bit (lsb) – (Glossary Entry)</a></li>
	<li id="menu-item-946" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-946"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/array-glossary-entry-2/">Array – (Glossary Entry)</a></li>
	<li id="menu-item-947" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-947"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/switch-case-statement-glossary-entry/">Switch-Case statement (Glossary Entry)</a></li>
	<li id="menu-item-948" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-948"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/array-glossary-entry/">Array (Glossary Entry)</a></li>
	<li id="menu-item-949" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-949"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/interrupt-glossary-entry/">Interrupt (Glossary Entry)</a></li>
	<li id="menu-item-950" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-950"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/light-dependent-resistor-ldr-glossary-entry/">Light Dependent Resistor (LDR) – (Glossary Entry)</a></li>
	<li id="menu-item-951" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-951"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/race-conditions-glossary-entry/">Race Conditions (Glossary Entry)</a></li>
	<li id="menu-item-952" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-952"><a href="https://blogs.plymouth.ac.uk/embedded-systems/glossary-2/digital-signal-processing-dsp-glossary-entry/">Digital Signal Processing (DSP) – (Glossary Entry)</a></li>
</ul>
</li>
</ul></div>	</nav><!-- #site-navigation -->

</header><!-- #masthead -->

	<div id="content" class="site-content">
		<div id="primary" class="content-area">
			<main id="main" class="site-main">

<article id="post-104" class="post-104 page type-page status-publish hentry entry">

			<header class="entry-header alignwide">
			<h1 class="entry-title">Part 5 – Timing Checks</h1>					</header><!-- .entry-header -->
	
	<div class="entry-content">
		<p><a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/test-benches/part-4-testing-with-simulated-timing/">prev</a></p>
<p>In the previous section, we looked at <em>modelling</em> propagation delay using the <code>after</code> keyword. The emphasis on after is an important one:</p>
<blockquote><p>the <code>after</code> keyword is ignored by synthesis tools. Real delays are an intrinsic property of internal electronics and routing.</p></blockquote>
<h2>Stability</h2>
<p>Consider the D-Type latch, a 1-bit memory and a basic building block of synchronous digital systems.</p>
<p>This is a device with two primary inputs, and at least one output:</p>
<ul>
<li>Input D</li>
<li>Latch enable input LE</li>
<li>Output Q</li>
</ul>
<p>The input D is ignored unless the <strong>level</strong> of the LE 
pin is HIGH, in which case the output Q=D. When LE is reset to a LOW 
state, the last stable output Q is held stable (remembered) and the 
input D is ignored once more. For deterministic behaviour, the D input 
needs to be stable (constant) before and sometimes after a change in the
 LE input.</p>
<ul>
<li>The <strong>set-up time</strong> is the period for which D must be stable <strong>before</strong> LE changes</li>
<li>The <strong>hold time</strong> is the period for which D must be stable <strong>after</strong> LE changes</li>
</ul>
<p>A failure to honour the set-up or hold time will result in a period 
of unpredictable changes in the Q output for an unspecific period of 
time. In the case where LE is falling, a change in D might not be 
registered in the output Q.</p>
<p>As we will see, the situation is even more serious in synchronous logic.</p>
<p>This description can be confusing, and to some extent, is also 
incomplete. It is probably easier to illustrate the behaviour of a 
D-Latch through modelling in VHDL, and through testing.</p>
<h3>The D-Latch in VHDL</h3>
<p>The VHDL for a D-Latch primitive is as follows:</p>
<pre class="theme:xcode lang:default mark:18,19,20 highlight:0 decode:true">library ieee;				
use ieee.std_logic_1164.all;
--use ieee.std_logic_unsigned.all;

-- Component 1 - very simple device that performs a logical OR on three single bit inputs
entity dlatch_primative is
port(  	D:	in std_logic;
	LE:	in std_logic;
	Q:	out std_logic
);
end dlatch_primative;

--This component has two architecture
architecture v1 of dlatch_primative is
begin
	process(D,LE)
	begin
		if (LE='1') then
			Q &lt;= D after 5 ns;
		end if;
		-- The absence of an else will result in a latching behviour
	end process;
end v1;</pre>
<p>If you examine the three highlighted lines, these are central to the 
latch behaviour. You can hopefully see how simple a latch really is – if
 the LE signal is HIGH, then the output = input. However, what if the LE
 signal is LOW, and where the latching behaviour specified? The answer 
is that the latching behaviour it is <em>implicit</em>. The IF statement only specifies what happens when <code>LE='1'</code>. For all other values of LE, nothing is specified, <em>so the compiler assumes the signal Q is latched for all other values of LE</em>. When a conditional statement does not provide full coverage, we get implicit latching behaviour.</p>
<p>Also note the sensitivity list for the process block.</p>
<blockquote><p>The process block will only update if one or more of the signals in the sensitivity list changes</p></blockquote>
<p>The output may need updating for a change in either D or LE (or 
both). Therefore both are listed. It is essential that you list these 
correctly otherwise you might have different (and often unexpected) 
behaviour. Incorrectly specifying the sensitivity list is a common error
 and is sometimes hard to spot.</p>
<h3>Testing the D-Latch</h3>
<p>To illustrate the D-Latch, a simple test bench is included below.</p>
<pre class="theme:xcode lang:default highlight:0 decode:true">library ieee;				
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
--use ieee.std_logic_unsigned.all;
--use std.textio.all;

entity dlatch_test is
end dlatch_test;

architecture v1 of dlatch_test is
	--Declare signals
	signal D_INPUT     : std_logic;
	signal LATCH_INPUT : std_logic;
	signal Q_OUTPUT    : std_logic;
	constant T         : time  := 50 ns;
	
begin
	--Instantiate v1 of the component type dlatch_primative
	u1: entity work.dlatch_primative(v1) PORT MAP (
		D  =&gt; D_INPUT,
		LE =&gt; LATCH_INPUT,
		Q  =&gt; Q_OUTPUT
	);

	main_process:
	process 
		--Declarations here
	begin	
		--Start with a wait to illustrate a point	
		wait for T;

		--Initialise
		D_INPUT     &lt;= '0';
		LATCH_INPUT &lt;= '0';
		wait for T;

		--Let's go
		D_INPUT     &lt;= '1';
		LATCH_INPUT &lt;= '0';
		wait for T;

		D_INPUT     &lt;= '1';
		LATCH_INPUT &lt;= '1';
		wait for T;

		D_INPUT     &lt;= '0';
		LATCH_INPUT &lt;= '1';
		wait for T;

		D_INPUT     &lt;= '1';
		LATCH_INPUT &lt;= '1';
		wait for T;

		D_INPUT     &lt;= '1';
		LATCH_INPUT &lt;= '0';
		wait for T;

		D_INPUT     &lt;= '0';
		LATCH_INPUT &lt;= '0';
		wait for T;

		D_INPUT     &lt;= '1';
		LATCH_INPUT &lt;= '0';
		wait for T;

		D_INPUT     &lt;= '0';
		LATCH_INPUT &lt;= '0';
		wait for T;

		D_INPUT     &lt;= '0';
		LATCH_INPUT &lt;= '1';
		wait for T;

		D_INPUT     &lt;= '0';
		LATCH_INPUT &lt;= '0';
		wait for T;

		D_INPUT     &lt;= '1';
		LATCH_INPUT &lt;= '0';
		wait for T;

		D_INPUT     &lt;= '0';
		LATCH_INPUT &lt;= '0';
		wait for T;

		--End of test is to wait forever
		wait;
	end process;
		
end v1;</pre>
<p>This somewhat verbose and manual approach is fine for small examples 
such as this. The output for this is shown in the following ModelSim 
waveform.</p>
<figure id="attachment_108" aria-describedby="caption-attachment-108" style="width: 1168px" class="wp-caption alignnone"><img class="size-full wp-image-108" src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/LatchTiming.png" alt="" width="1168" height="194" srcset="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/LatchTiming.png 1168w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/LatchTiming-300x50.png 300w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/LatchTiming-768x128.png 768w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/LatchTiming-1024x170.png 1024w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/LatchTiming-560x93.png 560w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/LatchTiming-260x43.png 260w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/LatchTiming-160x27.png 160w" sizes="(max-width: 1168px) 100vw, 1168px"><figcaption id="caption-attachment-108" class="wp-caption-text">Timing diagram for a D-Latch</figcaption></figure>
<p>From this, again we can observe the behaviour of the D-Latch under different conditions.</p>
<ul>
<li>At the start, we see red traces. In ModelSim, this means the signals
 are uninitialized (‘U’). This was done on purpose to make this point as
 uninitialized signals can be a source of serious bugs. T<em>his is something you might not spot had you tested this in hardware.</em></li>
<li>Once the LATCH_INPUT (connected to LE) is asserted high, the output is assigned to the input (HIGH). As long as the <em>level</em>
 of the latch enable is high, so the output follows the input. As soon 
as the latch enable falls low, so the last stable output is latched and 
the input is ignored. This is observed in the first latching phase.</li>
</ul>
<p>Already, you might be thinking that sequential logic is more 
challenging to exhaustively test, and you would be right. It is not 
enough to consider all input combinations, but also all possible 
sequences to qualify for exhaustive testing. The following sequences are
 covered:</p>
<ul>
<li>uninitialized inputs</li>
<li>inputs changing with LE LOW (no change in output)</li>
<li>inputs changing with LE HIGH (change in output)</li>
<li>latching a logic HIGH</li>
<li>latching a logic LOW</li>
</ul>
<p>But there is more! What about set up and hold time? This is not 
covered here, so we need to expand the test to check for this. I will 
assume the set up time to be 5ns and the hold time to be 1ns.</p>
<h3>Checking set up time</h3>
<p>Look at the following VHDL for a modified D-Latch. For brevity, I’ve only included the architecture.</p>
<pre class="theme:xcode lang:default mark:8-12 highlight:0 decode:true">architecture v1 of dlatch_primative is
	constant T_setup : time := 5 ns;
	constant T_hold  : time := 1 ns;
begin
	process(D,LE)
	begin
		--Check for setup violation
		if LE'EVENT then
			assert (D'LAST_EVENT &gt;= T_setup)
				report "Setup time violated"
				severity error; 
		end if;
		--The core logic
		if (LE='1') then
			Q &lt;= D after 5 ns;
		end if;
		-- The absence of an else will result in a latching behviour
	end process;
end v1;</pre>
<p>You will notice some additional code (highlighted).</p>
<ul>
<li><code>LE'EVENT</code> returns a boolean which is true if the LE signal has changed</li>
<li><code>D'LAST_EVENT</code> returns the time since the D signal last changed</li>
</ul>
<p>These are both examples of <strong>signal attributes</strong>. The syntax is SIGNAL’ATTRIBUTE.</p>
<p>Reading the logic now, the new code checks to see if the LE signal 
has changed. If so, it then looks at how long it has been since the D 
input signal changed. If this is greater than or equal to the set up 
time, no action is taken, otherwise an error is written to the console 
output (below).</p>
<p>The new tests added the test bench check the edge case (the limit 
where the test should pass) and a failure condition to check the assert 
statement detects the error.</p>
<pre class="theme:xcode lang:default highlight:0 decode:true">--Edge case
D_INPUT     &lt;= '1';
wait for 5 ns;
LATCH_INPUT &lt;= '1';
wait for T;
LATCH_INPUT &lt;= '0';
wait for T;

--Failure case
D_INPUT     &lt;= '0';
wait for 4 ns;
LATCH_INPUT &lt;= '1';
wait for T;
LATCH_INPUT &lt;= '0';
wait for T;</pre>
<p>The output from the simulation is as follows:</p>
<pre class="theme:dark-terminal lang:default highlight:0 decode:true">run -all
# ** Error: Setup time violated
#    Time: 50 ns  Iteration: 1  Instance: /dlatch_test/u1
# ** Error: Setup time violated
#    Time: 809 ns  Iteration: 1  Instance: /dlatch_test/u1</pre>
<p>Note that there are two violations of the set up time, although only one test was added.</p>
<ul>
<li>The first is at 50ns, when the LATCH_INPUT and D_INPUT signals change from ‘U’ to ‘0’.</li>
<li>The second refers to the explicit test added to the end of the test bench (marked by the yellow cursor)</li>
</ul>
<p>The first may have surprised you, but again, this is the power of 
simulation. The initial value of either input, in the absence of 
power-on reset, are undefined.Therefore a transition from ‘U’ to ‘0’ 
could indeed be a ‘1’ to ‘0’ in a real system.</p>
<figure id="attachment_114" aria-describedby="caption-attachment-114" style="width: 832px" class="wp-caption alignnone"><img loading="lazy" class="size-full wp-image-114" src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot5.png" alt="" width="832" height="448" srcset="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot5.png 832w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot5-300x162.png 300w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot5-768x414.png 768w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot5-560x302.png 560w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot5-260x140.png 260w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot5-160x86.png 160w" sizes="(max-width: 832px) 100vw, 832px"><figcaption id="caption-attachment-114" class="wp-caption-text">D-Latch with two setup time violations</figcaption></figure>
<p>What is missing are tests around the LE falling. I will leave the reader to implement those.</p>
<h3>Checking hold time</h3>
<p>The hold time can be checked in a similar way.</p>
<pre class="theme:xcode lang:default highlight:0 decode:true">--Check for hold violation
if D'EVENT then
	assert (LE'LAST_EVENT &gt;= T_hold)
		report "Hold time violated"
		severity error; 
end if;</pre>
<p>Again, we add an edge case test and a failure to the test bench:</p>
<pre class="theme:xcode lang:default highlight:0 decode:true">--Edge case
LATCH_INPUT &lt;= '1';
wait for 1 ns;
D_INPUT &lt;= '1';
wait for T;

--failure case
LATCH_INPUT &lt;= '0';
wait for T;
LATCH_INPUT &lt;= '1';
wait for 500 ps;
D_INPUT &lt;= '0';
wait for T;</pre>
<p>Again we see two errors:</p>
<pre class="theme:dark-terminal lang:default mark:4,5,8,9 highlight:0 decode:true">run -all
# ** Error: Setup time violated
#    Time: 50 ns  Iteration: 1  Instance: /dlatch_test/u1
# ** Error: Hold time violated
#    Time: 50 ns  Iteration: 1  Instance: /dlatch_test/u1
# ** Error: Setup time violated
#    Time: 809 ns  Iteration: 1  Instance: /dlatch_test/u1
# ** Error: Hold time violated
#    Time: 1010500 ps  Iteration: 1  Instance: /dlatch_test/u1</pre>
<p>The Waveform output in ModelSim is shown below, with the yellow cursor marking the time of the second hold-time violation.</p>
<figure id="attachment_118" aria-describedby="caption-attachment-118" style="width: 829px" class="wp-caption alignnone"><img loading="lazy" class="size-full wp-image-118" src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot6.png" alt="" width="829" height="464" srcset="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot6.png 829w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot6-300x168.png 300w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot6-768x430.png 768w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot6-560x313.png 560w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot6-260x146.png 260w, Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/snapshot6-160x90.png 160w" sizes="(max-width: 829px) 100vw, 829px"><figcaption id="caption-attachment-118" class="wp-caption-text">Showing a hold-time violation (marked by the yellow cursor)</figcaption></figure>
<p>&nbsp;</p>
<p>Next – <a href="https://blogs.plymouth.ac.uk/embedded-systems/fpga-and-vhdl/test-benches/part-6-modelling-and-testing-synchronous-systems/">Modelling and Testing Synchronous Systems</a></p>
	</div><!-- .entry-content -->

	</article><!-- #post-104 -->
			</main><!-- #main -->
		</div><!-- #primary -->
	</div><!-- #content -->

	
	<footer id="colophon" class="site-footer">

				<div class="site-info">
			<div class="site-name">
									<div class="site-logo"><a href="https://blogs.plymouth.ac.uk/embedded-systems/" class="custom-logo-link" rel="home"><img width="300" height="64" src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/wordpress-logo.png" class="custom-logo" alt="Embedded Systems"></a></div>
							</div><!-- .site-name -->

			
			<div class="powered-by">
				Proudly powered by <a href="https://en-gb.wordpress.org/">WordPress</a>.			</div><!-- .powered-by -->

		</div><!-- .site-info -->
	</footer><!-- #colophon -->

</div><!-- #page -->

<script>document.body.classList.remove("no-js");</script>	<script>
	if ( -1 !== navigator.userAgent.indexOf( 'MSIE' ) || -1 !== navigator.appVersion.indexOf( 'Trident/' ) ) {
		document.body.classList.add( 'is-IE' );
	}
	</script>
	<script id="twenty-twenty-one-ie11-polyfills-js-after">
( Element.prototype.matches && Element.prototype.closest && window.NodeList && NodeList.prototype.forEach ) || document.write( '<script src="https://blogs.plymouth.ac.uk/embedded-systems/wp-content/themes/twentytwentyone/assets/js/polyfills.js?ver=1.5"></scr' + 'ipt>' );
</script>
<script src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/primary-navigation.js" id="twenty-twenty-one-primary-navigation-script-js"></script>
<script src="Part%205%20%E2%80%93%20Timing%20Checks%20%E2%80%93%20Embedded%20Systems_files/responsive-embeds.js" id="twenty-twenty-one-responsive-embeds-script-js"></script>
		<script>
		/(trident|msie)/i.test(navigator.userAgent)&&document.getElementById&&window.addEventListener&&window.addEventListener("hashchange",(function(){var t,e=location.hash.substring(1);/^[A-z0-9_-]+$/.test(e)&&(t=document.getElementById(e))&&(/^(?:a|select|input|button|textarea)$/i.test(t.tagName)||(t.tabIndex=-1),t.focus())}),!1);
		</script>
		


</body></html>